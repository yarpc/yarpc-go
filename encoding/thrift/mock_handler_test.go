// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/yarpc/yarpc-go/encoding/thrift (interfaces: Handler)

package thrift

import (
	gomock "github.com/golang/mock/gomock"
	wire "github.com/thriftrw/thriftrw-go/wire"
)

// Mock of Handler interface
type MockHandler struct {
	ctrl     *gomock.Controller
	recorder *_MockHandlerRecorder
}

// Recorder for MockHandler (not exported)
type _MockHandlerRecorder struct {
	mock *MockHandler
}

func NewMockHandler(ctrl *gomock.Controller) *MockHandler {
	mock := &MockHandler{ctrl: ctrl}
	mock.recorder = &_MockHandlerRecorder{mock}
	return mock
}

func (_m *MockHandler) EXPECT() *_MockHandlerRecorder {
	return _m.recorder
}

func (_m *MockHandler) Handle(_param0 *ReqMeta, _param1 wire.Value) (Response, error) {
	ret := _m.ctrl.Call(_m, "Handle", _param0, _param1)
	ret0, _ := ret[0].(Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockHandlerRecorder) Handle(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Handle", arg0, arg1)
}
