// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/yarpc/yarpc-go/transport (interfaces: Inbound)

package transporttest

import (
	gomock "github.com/golang/mock/gomock"
	transport "github.com/yarpc/yarpc-go/transport"
)

// Mock of Inbound interface
type MockInbound struct {
	ctrl     *gomock.Controller
	recorder *_MockInboundRecorder
}

// Recorder for MockInbound (not exported)
type _MockInboundRecorder struct {
	mock *MockInbound
}

func NewMockInbound(ctrl *gomock.Controller) *MockInbound {
	mock := &MockInbound{ctrl: ctrl}
	mock.recorder = &_MockInboundRecorder{mock}
	return mock
}

func (_m *MockInbound) EXPECT() *_MockInboundRecorder {
	return _m.recorder
}

func (_m *MockInbound) Start(_param0 transport.Handler) error {
	ret := _m.ctrl.Call(_m, "Start", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockInboundRecorder) Start(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Start", arg0)
}

func (_m *MockInbound) Stop() error {
	ret := _m.ctrl.Call(_m, "Stop")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockInboundRecorder) Stop() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Stop")
}
