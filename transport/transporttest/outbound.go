// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/yarpc/yarpc-go/transport (interfaces: Outbound)

package transporttest

import (
	gomock "github.com/golang/mock/gomock"
	transport "github.com/yarpc/yarpc-go/transport"
	context "golang.org/x/net/context"
)

// Mock of Outbound interface
type MockOutbound struct {
	ctrl     *gomock.Controller
	recorder *_MockOutboundRecorder
}

// Recorder for MockOutbound (not exported)
type _MockOutboundRecorder struct {
	mock *MockOutbound
}

func NewMockOutbound(ctrl *gomock.Controller) *MockOutbound {
	mock := &MockOutbound{ctrl: ctrl}
	mock.recorder = &_MockOutboundRecorder{mock}
	return mock
}

func (_m *MockOutbound) EXPECT() *_MockOutboundRecorder {
	return _m.recorder
}

func (_m *MockOutbound) Call(_param0 context.Context, _param1 *transport.Request) (*transport.Response, error) {
	ret := _m.ctrl.Call(_m, "Call", _param0, _param1)
	ret0, _ := ret[0].(*transport.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockOutboundRecorder) Call(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Call", arg0, arg1)
}
