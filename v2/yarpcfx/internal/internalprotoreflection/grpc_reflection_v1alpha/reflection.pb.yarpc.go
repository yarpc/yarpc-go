// Code generated by protoc-gen-yarpc-go
// source: grpc_reflection_v1alpha/reflection.proto
// DO NOT EDIT!

package grpc_reflection_v1alpha

import (
	"context"
	"io/ioutil"
	"reflect"

	"github.com/gogo/protobuf/proto"
	"go.uber.org/fx"
	"go.uber.org/yarpc"
	"go.uber.org/yarpc/api/transport"
	"go.uber.org/yarpc/encoding/protobuf"
	"go.uber.org/yarpc/encoding/protobuf/reflection"
)

var _ = ioutil.NopCloser

// ServerReflectionYARPCClient is the YARPC client-side interface for the ServerReflection service.
type ServerReflectionYARPCClient interface {
	ServerReflectionInfo(context.Context, ...yarpc.CallOption) (ServerReflectionServiceServerReflectionInfoYARPCClient, error)
}

// ServerReflectionServiceServerReflectionInfoYARPCClient sends ServerReflectionRequests and receives ServerReflectionResponses, returning io.EOF when the stream is complete.
type ServerReflectionServiceServerReflectionInfoYARPCClient interface {
	Context() context.Context
	Send(*ServerReflectionRequest, ...yarpc.StreamOption) error
	Recv(...yarpc.StreamOption) (*ServerReflectionResponse, error)
	CloseSend(...yarpc.StreamOption) error
}

// NewServerReflectionYARPCClient builds a new YARPC client for the ServerReflection service.
func NewServerReflectionYARPCClient(clientConfig transport.ClientConfig, options ...protobuf.ClientOption) ServerReflectionYARPCClient {
	return &_ServerReflectionYARPCCaller{protobuf.NewStreamClient(
		protobuf.ClientParams{
			ServiceName:  "grpc.reflection.v1alpha.ServerReflection",
			ClientConfig: clientConfig,
			Options:      options,
		},
	)}
}

// ServerReflectionYARPCServer is the YARPC server-side interface for the ServerReflection service.
type ServerReflectionYARPCServer interface {
	ServerReflectionInfo(ServerReflectionServiceServerReflectionInfoYARPCServer) error
}

// ServerReflectionServiceServerReflectionInfoYARPCServer receives ServerReflectionRequests and sends ServerReflectionResponse.
type ServerReflectionServiceServerReflectionInfoYARPCServer interface {
	Context() context.Context
	Recv(...yarpc.StreamOption) (*ServerReflectionRequest, error)
	Send(*ServerReflectionResponse, ...yarpc.StreamOption) error
}

// BuildServerReflectionYARPCProcedures prepares an implementation of the ServerReflection service for YARPC registration.
func BuildServerReflectionYARPCProcedures(server ServerReflectionYARPCServer) []transport.Procedure {
	handler := &_ServerReflectionYARPCHandler{server}
	return protobuf.BuildProcedures(
		protobuf.BuildProceduresParams{
			ServiceName:         "grpc.reflection.v1alpha.ServerReflection",
			UnaryHandlerParams:  []protobuf.BuildProceduresUnaryHandlerParams{},
			OnewayHandlerParams: []protobuf.BuildProceduresOnewayHandlerParams{},
			StreamHandlerParams: []protobuf.BuildProceduresStreamHandlerParams{
				{
					MethodName: "ServerReflectionInfo",
					Handler: protobuf.NewStreamHandler(
						protobuf.StreamHandlerParams{
							Handle: handler.ServerReflectionInfo,
						},
					),
				},
			},
		},
	)
}

// FxServerReflectionYARPCClientParams defines the input
// for NewFxServerReflectionYARPCClient. It provides the
// paramaters to get a ServerReflectionYARPCClient in an
// Fx application.
type FxServerReflectionYARPCClientParams struct {
	fx.In

	Provider yarpc.ClientConfig
}

// FxServerReflectionYARPCClientResult defines the output
// of NewFxServerReflectionYARPCClient. It provides a
// ServerReflectionYARPCClient to an Fx application.
type FxServerReflectionYARPCClientResult struct {
	fx.Out

	Client ServerReflectionYARPCClient

	// We are using an fx.Out struct here instead of just returning a client
	// so that we can add more values or add named versions of the client in
	// the future without breaking any existing code.
}

// NewFxServerReflectionYARPCClient provides a ServerReflectionYARPCClient
// to an Fx application using the given name for routing.
//
//  fx.Provide(
//    grpc_reflection_v1alpha.NewFxServerReflectionYARPCClient("service-name"),
//    ...
//  )
func NewFxServerReflectionYARPCClient(name string, options ...protobuf.ClientOption) interface{} {
	return func(params FxServerReflectionYARPCClientParams) FxServerReflectionYARPCClientResult {
		return FxServerReflectionYARPCClientResult{
			Client: NewServerReflectionYARPCClient(params.Provider.ClientConfig(name), options...),
		}
	}
}

// FxServerReflectionYARPCProceduresParams defines the input
// for NewFxServerReflectionYARPCProcedures. It provides the
// paramaters to get ServerReflectionYARPCServer procedures in an
// Fx application.
type FxServerReflectionYARPCProceduresParams struct {
	fx.In

	Server ServerReflectionYARPCServer
}

// FxServerReflectionYARPCProceduresResult defines the output
// of NewFxServerReflectionYARPCProcedures. It provides
// ServerReflectionYARPCServer procedures to an Fx application.
//
// The procedures are provided to the "yarpcfx" value group.
// Dig 1.2 or newer must be used for this feature to work.
type FxServerReflectionYARPCProceduresResult struct {
	fx.Out

	Procedures     []transport.Procedure `group:"yarpcfx"`
	ReflectionMeta reflection.ServerMeta `group:"yarpcfx"`
}

// NewFxServerReflectionYARPCProcedures provides ServerReflectionYARPCServer procedures to an Fx application.
// It expects a ServerReflectionYARPCServer to be present in the container.
//
//  fx.Provide(
//    grpc_reflection_v1alpha.NewFxServerReflectionYARPCProcedures(),
//    ...
//  )
func NewFxServerReflectionYARPCProcedures() interface{} {
	return func(params FxServerReflectionYARPCProceduresParams) FxServerReflectionYARPCProceduresResult {
		return FxServerReflectionYARPCProceduresResult{
			Procedures: BuildServerReflectionYARPCProcedures(params.Server),
			ReflectionMeta: reflection.ServerMeta{
				ServiceName:     "grpc.reflection.v1alpha.ServerReflection",
				FileDescriptors: yarpcFileDescriptorClosure42a8ac412db3cb03,
			},
		}
	}
}

type _ServerReflectionYARPCCaller struct {
	streamClient protobuf.StreamClient
}

func (c *_ServerReflectionYARPCCaller) ServerReflectionInfo(ctx context.Context, options ...yarpc.CallOption) (ServerReflectionServiceServerReflectionInfoYARPCClient, error) {
	stream, err := c.streamClient.CallStream(ctx, "ServerReflectionInfo", options...)
	if err != nil {
		return nil, err
	}
	return &_ServerReflectionServiceServerReflectionInfoYARPCClient{stream: stream}, nil
}

type _ServerReflectionYARPCHandler struct {
	server ServerReflectionYARPCServer
}

func (h *_ServerReflectionYARPCHandler) ServerReflectionInfo(serverStream *protobuf.ServerStream) error {
	return h.server.ServerReflectionInfo(&_ServerReflectionServiceServerReflectionInfoYARPCServer{serverStream: serverStream})
}

type _ServerReflectionServiceServerReflectionInfoYARPCClient struct {
	stream *protobuf.ClientStream
}

func (c *_ServerReflectionServiceServerReflectionInfoYARPCClient) Context() context.Context {
	return c.stream.Context()
}

func (c *_ServerReflectionServiceServerReflectionInfoYARPCClient) Send(request *ServerReflectionRequest, options ...yarpc.StreamOption) error {
	return c.stream.Send(request, options...)
}

func (c *_ServerReflectionServiceServerReflectionInfoYARPCClient) Recv(options ...yarpc.StreamOption) (*ServerReflectionResponse, error) {
	responseMessage, err := c.stream.Receive(newServerReflectionServiceServerReflectionInfoYARPCResponse, options...)
	if responseMessage == nil {
		return nil, err
	}
	response, ok := responseMessage.(*ServerReflectionResponse)
	if !ok {
		return nil, protobuf.CastError(emptyServerReflectionServiceServerReflectionInfoYARPCResponse, responseMessage)
	}
	return response, err
}

func (c *_ServerReflectionServiceServerReflectionInfoYARPCClient) CloseSend(options ...yarpc.StreamOption) error {
	return c.stream.Close(options...)
}

type _ServerReflectionServiceServerReflectionInfoYARPCServer struct {
	serverStream *protobuf.ServerStream
}

func (s *_ServerReflectionServiceServerReflectionInfoYARPCServer) Context() context.Context {
	return s.serverStream.Context()
}

func (s *_ServerReflectionServiceServerReflectionInfoYARPCServer) Recv(options ...yarpc.StreamOption) (*ServerReflectionRequest, error) {
	requestMessage, err := s.serverStream.Receive(newServerReflectionServiceServerReflectionInfoYARPCRequest, options...)
	if requestMessage == nil {
		return nil, err
	}
	request, ok := requestMessage.(*ServerReflectionRequest)
	if !ok {
		return nil, protobuf.CastError(emptyServerReflectionServiceServerReflectionInfoYARPCRequest, requestMessage)
	}
	return request, err
}

func (s *_ServerReflectionServiceServerReflectionInfoYARPCServer) Send(response *ServerReflectionResponse, options ...yarpc.StreamOption) error {
	return s.serverStream.Send(response, options...)
}

func newServerReflectionServiceServerReflectionInfoYARPCRequest() proto.Message {
	return &ServerReflectionRequest{}
}

func newServerReflectionServiceServerReflectionInfoYARPCResponse() proto.Message {
	return &ServerReflectionResponse{}
}

var (
	emptyServerReflectionServiceServerReflectionInfoYARPCRequest  = &ServerReflectionRequest{}
	emptyServerReflectionServiceServerReflectionInfoYARPCResponse = &ServerReflectionResponse{}
)

var yarpcFileDescriptorClosure42a8ac412db3cb03 = [][]byte{
	// grpc_reflection_v1alpha/reflection.proto
	[]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0x51, 0x73, 0xd2, 0x40,
		0x10, 0x6e, 0x5a, 0x68, 0x87, 0x85, 0x02, 0x5e, 0x2b, 0xa4, 0x3a, 0x75, 0x98, 0x68, 0x35, 0x75,
		0x1c, 0xda, 0xe2, 0x8c, 0x3f, 0x80, 0xaa, 0x83, 0x33, 0xb5, 0x75, 0x0e, 0x5f, 0x1c, 0x1f, 0x6e,
		0x02, 0x2c, 0x34, 0x1a, 0x72, 0xf1, 0x2e, 0x45, 0x79, 0xf2, 0x47, 0xf8, 0xa3, 0xfc, 0x4b, 0x3e,
		0x3a, 0x77, 0x09, 0x21, 0xa4, 0x44, 0xa7, 0x4f, 0x30, 0xdf, 0xee, 0xde, 0xb7, 0xbb, 0xdf, 0xb7,
		0x01, 0x7b, 0x22, 0x82, 0x21, 0x13, 0x38, 0xf6, 0x70, 0x18, 0xba, 0xdc, 0x67, 0xb3, 0x33, 0xc7,
		0x0b, 0xae, 0x9d, 0x93, 0x25, 0xd4, 0x0e, 0x04, 0x0f, 0x39, 0x69, 0xaa, 0xcc, 0x76, 0x0a, 0x8e,
		0x33, 0xad, 0x3f, 0x9b, 0xd0, 0xec, 0xa3, 0x98, 0xa1, 0xa0, 0x49, 0x90, 0xe2, 0xb7, 0x1b, 0x94,
		0x21, 0x21, 0x50, 0xb8, 0xe6, 0x32, 0x34, 0x8d, 0x96, 0x61, 0x97, 0xa8, 0xfe, 0x4f, 0x9e, 0x43,
		0x7d, 0xec, 0x7a, 0xc8, 0x06, 0x73, 0xa6, 0x7e, 0x7d, 0x67, 0x8a, 0xe6, 0x96, 0x8a, 0xf7, 0x36,
		0x68, 0x55, 0x21, 0xdd, 0xf9, 0xdb, 0x18, 0x27, 0xaf, 0xa0, 0xa1, 0x73, 0x87, 0xdc, 0x0f, 0x1d,
		0xd7, 0x77, 0xfd, 0x09, 0x93, 0xf3, 0xe9, 0x80, 0x7b, 0x66, 0x21, 0xae, 0xd8, 0x57, 0xf1, 0xf3,
		0x24, 0xdc, 0xd7, 0x51, 0x32, 0x81, 0x83, 0x6c, 0x1d, 0xfe, 0x08, 0xd1, 0x97, 0x2e, 0xf7, 0xcd,
		0x62, 0xcb, 0xb0, 0xcb, 0x9d, 0xe3, 0x76, 0xce, 0x40, 0xed, 0x37, 0x8b, 0xcc, 0x78, 0x8a, 0xde,
		0x06, 0x6d, 0xae, 0xb2, 0x24, 0x19, 0xa4, 0x0b, 0x87, 0x8e, 0xe7, 0x2d, 0x1f, 0x67, 0xfe, 0xcd,
		0x74, 0x80, 0x42, 0x32, 0x3e, 0x66, 0xe1, 0x3c, 0x40, 0x73, 0x3b, 0xee, 0xf3, 0xc0, 0xf1, 0xbc,
		0xa4, 0xec, 0x32, 0x4a, 0xba, 0x1a, 0x7f, 0x9c, 0x07, 0x48, 0x8e, 0x60, 0xd7, 0x73, 0x65, 0xc8,
		0x24, 0x8a, 0x99, 0x3b, 0x44, 0x69, 0xee, 0xc4, 0x35, 0x15, 0x05, 0xf7, 0x63, 0xb4, 0x7b, 0x0f,
		0x6a, 0x53, 0x94, 0xd2, 0x99, 0x20, 0x13, 0x51, 0x63, 0xd6, 0x18, 0xea, 0xd9, 0x66, 0xc9, 0x33,
		0xa8, 0xa5, 0xa6, 0xd6, 0x3d, 0x44, 0xdb, 0xaf, 0x2e, 0x61, 0x4d, 0x7b, 0x0c, 0xf5, 0x6c, 0xdb,
		0xe6, 0x66, 0xcb, 0xb0, 0x8b, 0xb4, 0x86, 0xab, 0x8d, 0x5a, 0xbf, 0x0b, 0x60, 0xde, 0x96, 0x58,
		0x06, 0xdc, 0x97, 0x48, 0x0e, 0x01, 0x66, 0x8e, 0xe7, 0x8e, 0x58, 0x4a, 0xe9, 0x92, 0x46, 0x7a,
		0x4a, 0xee, 0xcf, 0x50, 0xe7, 0xc2, 0x9d, 0xb8, 0xbe, 0xe3, 0x2d, 0xfa, 0xd6, 0x34, 0xe5, 0xce,
		0x69, 0xae, 0x02, 0x39, 0x76, 0xa2, 0xb5, 0xc5, 0x4b, 0x8b, 0x61, 0xbf, 0x82, 0xa9, 0x75, 0x1e,
		0xa1, 0x1c, 0x0a, 0x37, 0x08, 0xb9, 0x60, 0x22, 0xee, 0x4b, 0x3b, 0xa4, 0xdc, 0x39, 0xc9, 0x25,
		0x51, 0x26, 0x7b, 0x9d, 0xd4, 0x2d, 0xc6, 0xe9, 0x6d, 0x50, 0x6d, 0xb9, 0xdb, 0x11, 0xf2, 0x1d,
		0x1e, 0xad, 0xd7, 0x3a, 0xa1, 0x2c, 0xfe, 0x67, 0xae, 0x8c, 0x01, 0x52, 0x9c, 0x0f, 0xd7, 0xd8,
		0x23, 0x21, 0x1e, 0x41, 0x63, 0xc5, 0x20, 0x4b, 0xc2, 0x6d, 0x4d, 0xf8, 0x22, 0x97, 0xf0, 0x62,
		0x69, 0xa0, 0x14, 0xd9, 0x7e, 0xda, 0x57, 0x09, 0xcb, 0x15, 0x54, 0x51, 0x88, 0xf4, 0x06, 0x77,
		0xf4, 0xeb, 0x4f, 0xf3, 0xc7, 0x51, 0xe9, 0xa9, 0x77, 0x77, 0x31, 0x0d, 0x74, 0x09, 0xd4, 0x97,
		0x86, 0x8d, 0x30, 0xeb, 0x02, 0x1a, 0xeb, 0xf7, 0x4e, 0x3a, 0x70, 0x3f, 0x2b, 0xa5, 0xfe, 0xf0,
		0x98, 0x46, 0x6b, 0xcb, 0xae, 0xd0, 0xbd, 0x55, 0x51, 0x3e, 0xa8, 0x90, 0xf5, 0x05, 0x9a, 0x39,
		0x2b, 0x25, 0x4f, 0xa0, 0x3a, 0x70, 0x24, 0xea, 0x03, 0x60, 0xfa, 0x1b, 0x13, 0x39, 0xb3, 0xa2,
		0x50, 0xe5, 0xff, 0x4b, 0xf5, 0x7d, 0x59, 0x7f, 0x03, 0x5b, 0xeb, 0x6e, 0xe0, 0x13, 0xec, 0xad,
		0xd9, 0x26, 0xe9, 0xc2, 0x4e, 0x2c, 0x8b, 0x6e, 0xb4, 0xdc, 0xb1, 0xff, 0xe9, 0xea, 0x54, 0x29,
		0x5d, 0x14, 0x5a, 0x47, 0x50, 0xcb, 0x3e, 0x4b, 0xa0, 0x90, 0x6a, 0x5a, 0xff, 0xb7, 0xfa, 0xb0,
		0xbb, 0xb2, 0x71, 0x75, 0x79, 0x91, 0x62, 0x43, 0x3e, 0x8a, 0x52, 0x8b, 0xb4, 0xa4, 0x91, 0x73,
		0x3e, 0x42, 0xf2, 0x18, 0x22, 0x41, 0x58, 0xac, 0x82, 0x3e, 0xbb, 0x12, 0xad, 0x68, 0xf0, 0x7d,
		0x84, 0x75, 0x7e, 0x19, 0x50, 0xcf, 0x9e, 0x1b, 0xf9, 0x09, 0xfb, 0x59, 0xec, 0x9d, 0x3f, 0xe6,
		0xe4, 0xce, 0x17, 0xfb, 0xe0, 0xec, 0x0e, 0x15, 0xd1, 0x54, 0xb6, 0x71, 0x6a, 0x0c, 0xb6, 0xb5,
		0xf4, 0x2f, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0x85, 0x02, 0x09, 0x9d, 0x9f, 0x06, 0x00, 0x00,
	},
}

func init() {
	yarpc.RegisterClientBuilder(
		func(clientConfig transport.ClientConfig, structField reflect.StructField) ServerReflectionYARPCClient {
			return NewServerReflectionYARPCClient(clientConfig, protobuf.ClientBuilderOptions(clientConfig, structField)...)
		},
	)
}
